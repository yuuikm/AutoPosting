import logging
import sys
import os
import asyncio
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../../')))
from parsers.exclusive_kz import scraper as exclusive_scraper
from shared.config import EXCLUSIVE_TELEGRAM_BOT_TOKEN, USER_ID

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

main_menu = [["/run", "/status"], ["/help"]]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_markup = ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
    await update.message.reply_text(
        "üöÄ Exclusive.kz –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é:",
        reply_markup=reply_markup
    )

async def run_scraper(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != USER_ID:
        await update.message.reply_text("‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∞–ø–µ—Ä–∞.")
        return

    await update.message.reply_text("üîç –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∞–ø–µ—Ä –¥–ª—è Exclusive.kz...")
    try:
        await asyncio.to_thread(exclusive_scraper.scrape_page)
        await update.message.reply_text("‚úÖ –°–∫—Ä–∞–ø–µ—Ä –¥–ª—è Exclusive.kz –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É. –ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram, Instagram –∏ Facebook.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != USER_ID:
        await update.message.reply_text("‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞.")
        return

    await update.message.reply_text("üí° –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –≥–æ—Ç–æ–≤ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∫–æ–º–∞–Ω–¥.")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "/start \\- –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/run \\- –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∞–ø–µ—Ä\n"
        "/status \\- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞\n"
        "/help \\- –°–ø—Ä–∞–≤–∫–∞\n\n"
        "üëâ [–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ –Ω–∞ GitHub](https://github.com/yuuikm/AutoPosting)",
        parse_mode="MarkdownV2"
    )

if __name__ == '__main__':
    app = ApplicationBuilder().token(EXCLUSIVE_TELEGRAM_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("run", run_scraper))
    app.add_handler(CommandHandler("status", status))
    app.add_handler(CommandHandler("help", help_command))

    print("üöÄ Exclusive.kz Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()
